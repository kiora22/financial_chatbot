services:
  frontend:
    build:
      context: .
      dockerfile: dockerfiles/frontend.Dockerfile
    ports:
      - "8501:8501"
    volumes:
      - ./data/uploads:/app/data/uploads
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8000
      - STREAMLIT_SERVER_PORT=8501
    networks:
      - shared_network
  backend:
    build:
      context: .
      dockerfile: dockerfiles/backend.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    depends_on:
      - vector_db
      - financial_db
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_HOST=vector_db
      - VECTOR_DB_PORT=8080
      - DATABASE_URL=sqlite:////app/data/financial_db.sqlite
    networks:
      - shared_network

  document_processor:
    build:
      context: .
      dockerfile: dockerfiles/document_processor.Dockerfile
    volumes:
      - ./data:/app/data
      - ./data/document_drop:/app/document_drop
    depends_on:
      - vector_db
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - VECTOR_DB_HOST=vector_db
      - VECTOR_DB_PORT=8080
      - WATCH_FOLDER=/app/document_drop
    networks:
      - shared_network

  vector_db:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: vector_db
    ports:
      - "8080:8000"
    volumes:
      - chroma_data:/chroma/chroma
    networks:
      - shared_network
    environment:
      - IS_PERSISTENT=FALSE
      - CHROMA_DB_DIR=/chroma  # Explicitly set the DB directory
      - CHROMA_ENV=production
      - DEBUG=false
  financial_db:
    image: keinos/sqlite3:latest
    container_name: financial_db
    networks:
      - shared_network
    volumes:
      - ./data:/data
    command: ["echo", "SQLite service ready"]

volumes:
  chroma_data:

networks:
  shared_network: